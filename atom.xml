<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小张哥blog</title>
  
  <subtitle>维尼熊</subtitle>
  <link href="http://xiaomozhang.github.io/atom.xml" rel="self"/>
  
  <link href="http://xiaomozhang.github.io/"/>
  <updated>2021-10-18T03:10:18.966Z</updated>
  <id>http://xiaomozhang.github.io/</id>
  
  <author>
    <name>小张哥</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spring5源码-内置的后置处理器PostProcess加载源码解析</title>
    <link href="http://xiaomozhang.github.io/2021/10/16/spring5-build-soure-code/"/>
    <id>http://xiaomozhang.github.io/2021/10/16/spring5-build-soure-code/</id>
    <published>2021-10-16T01:23:45.000Z</published>
    <updated>2021-10-18T03:10:18.966Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;一-准备工作&quot;&gt;&lt;a href=&quot;#一-准备工作&quot; class=&quot;headerlink&quot; title=&quot;一. 准备工作&quot;&gt;&lt;/a&gt;一.</summary>
        
      
    
    
    
    <category term="build source code" scheme="http://xiaomozhang.github.io/categories/build-source-code/"/>
    
    
    <category term="spring5" scheme="http://xiaomozhang.github.io/tags/spring5/"/>
    
    <category term="build source code" scheme="http://xiaomozhang.github.io/tags/build-source-code/"/>
    
  </entry>
  
  <entry>
    <title>spring5源码-内置的后置处理器PostProcess加载源码解析</title>
    <link href="http://xiaomozhang.github.io/2021/10/15/spring5-postprocess-source-code-analysis/"/>
    <id>http://xiaomozhang.github.io/2021/10/15/spring5-postprocess-source-code-analysis/</id>
    <published>2021-10-15T01:23:45.000Z</published>
    <updated>2021-10-18T03:18:45.777Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;一-研究目标-解析spring如何加载配置类&quot;&gt;&lt;a href=&quot;#一-研究目标-解析spring如何加载配置类&quot; class=&quot;headerlink&quot; title=&quot;一. 研究目标: 解析spring如何加载配置类&quot;&gt;&lt;/a&gt;一. 研究目标:</summary>
        
      
    
    
    
    <category term="spring5 postProcess" scheme="http://xiaomozhang.github.io/categories/spring5-postProcess/"/>
    
    
    <category term="spring5" scheme="http://xiaomozhang.github.io/tags/spring5/"/>
    
    <category term="postProcess" scheme="http://xiaomozhang.github.io/tags/postProcess/"/>
    
  </entry>
  
  <entry>
    <title>spring5源码 - ioc加载整体流程详解</title>
    <link href="http://xiaomozhang.github.io/2021/10/14/spring5-source-code-ioc-process-description/"/>
    <id>http://xiaomozhang.github.io/2021/10/14/spring5-source-code-ioc-process-description/</id>
    <published>2021-10-14T04:54:08.000Z</published>
    <updated>2021-10-14T14:44:44.031Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;通过上篇文章&lt;a href=&quot;https://xiaomozhang.github.io/2021/10/14/spring5-source-code-bean-life-cycle/&quot;&gt;&lt;code&gt;spring5源码 - IOC加载过程</summary>
        
      
    
    
    
    <category term="spring5 ioc process" scheme="http://xiaomozhang.github.io/categories/spring5-ioc-process/"/>
    
    
    <category term="spring5" scheme="http://xiaomozhang.github.io/tags/spring5/"/>
    
    <category term="IOC process" scheme="http://xiaomozhang.github.io/tags/IOC-process/"/>
    
  </entry>
  
  <entry>
    <title>spring5源码 - IOC加载过程 Bean的生命周期</title>
    <link href="http://xiaomozhang.github.io/2021/10/14/spring5-source-code-bean-life-cycle/"/>
    <id>http://xiaomozhang.github.io/2021/10/14/spring5-source-code-bean-life-cycle/</id>
    <published>2021-10-14T03:54:08.000Z</published>
    <updated>2021-10-14T13:24:44.082Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;一-spring源码整体脉络介绍&quot;&gt;&lt;a href=&quot;#一-spring源码整体脉络介绍&quot; class=&quot;headerlink&quot; title=&quot;一. spring源码整体脉络介绍&quot;&gt;&lt;/a&gt;一. spring源码整体脉络介绍&lt;/h3&gt;&lt;h4</summary>
        
      
    
    
    
    <category term="spring5源码IOC加载过程" scheme="http://xiaomozhang.github.io/categories/spring5%E6%BA%90%E7%A0%81IOC%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/"/>
    
    
    <category term="spring5" scheme="http://xiaomozhang.github.io/tags/spring5/"/>
    
    <category term="IOC" scheme="http://xiaomozhang.github.io/tags/IOC/"/>
    
    <category term="spring源码" scheme="http://xiaomozhang.github.io/tags/spring%E6%BA%90%E7%A0%81/"/>
    
    <category term="bean life cycle" scheme="http://xiaomozhang.github.io/tags/bean-life-cycle/"/>
    
  </entry>
  
  <entry>
    <title>springcloud结合nacos实现灰度发版方案</title>
    <link href="http://xiaomozhang.github.io/2021/10/14/springcloud-nacos-gray-plan-demo/"/>
    <id>http://xiaomozhang.github.io/2021/10/14/springcloud-nacos-gray-plan-demo/</id>
    <published>2021-10-14T02:54:08.000Z</published>
    <updated>2021-10-14T12:28:45.767Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近和组内伙伴一起分享讨论了灰度方案,先将内容整理出来, 具体如下:&lt;/p&gt;
&lt;p&gt;灰度方案设计及demo实现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;架构设计&lt;/li&gt;
&lt;li&gt;组件设计及原理&lt;/li&gt;
&lt;li&gt;关键代码实现&lt;/li&gt;
&lt;li&gt;项目资料&lt;h3</summary>
        
      
    
    
    
    <category term="springcloud gray plan" scheme="http://xiaomozhang.github.io/categories/springcloud-gray-plan/"/>
    
    
    <category term="springcloud" scheme="http://xiaomozhang.github.io/tags/springcloud/"/>
    
    <category term="nacos" scheme="http://xiaomozhang.github.io/tags/nacos/"/>
    
    <category term="ribbon" scheme="http://xiaomozhang.github.io/tags/ribbon/"/>
    
    <category term="feign" scheme="http://xiaomozhang.github.io/tags/feign/"/>
    
  </entry>
  
  <entry>
    <title>微服务网关zuul限流、熔断、路由规则详解</title>
    <link href="http://xiaomozhang.github.io/2021/10/13/spring-cloud-zuul-rule-limiting-fallback-analyze/"/>
    <id>http://xiaomozhang.github.io/2021/10/13/spring-cloud-zuul-rule-limiting-fallback-analyze/</id>
    <published>2021-10-13T02:01:45.000Z</published>
    <updated>2021-10-13T09:11:01.200Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;最近在研究灰度方案。 灰度主要涉及两个方面，一个是网关，一个是配置。 这次主要研究了网关及其原理，我们现在使用项目每天都有很多流量进入。</summary>
        
      
    
    
    
    <category term="Spring Cloud" scheme="http://xiaomozhang.github.io/categories/Spring-Cloud/"/>
    
    
    <category term="SpringCloud zuul nacos" scheme="http://xiaomozhang.github.io/tags/SpringCloud-zuul-nacos/"/>
    
  </entry>
  
  <entry>
    <title>golang从内核到epoll</title>
    <link href="http://xiaomozhang.github.io/2021/10/12/golang-from-kernel-to-epoll/"/>
    <id>http://xiaomozhang.github.io/2021/10/12/golang-from-kernel-to-epoll/</id>
    <published>2021-10-12T06:21:03.000Z</published>
    <updated>2021-10-13T02:15:26.864Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;引子：在之前的文章里 &lt;a href=&quot;https://xiaomozhang.github.io/2021/10/12/golang-netpoll-realization-analysis/&quot;&gt;&lt;code&gt;golang</summary>
        
      
    
    
    
    <category term="Golang Kernel epoll" scheme="http://xiaomozhang.github.io/categories/Golang-Kernel-epoll/"/>
    
    
    <category term="Golang Kernel epoll" scheme="http://xiaomozhang.github.io/tags/Golang-Kernel-epoll/"/>
    
  </entry>
  
  <entry>
    <title>golang netpoll的实现与分析</title>
    <link href="http://xiaomozhang.github.io/2021/10/12/golang-netpoll-realization-analysis/"/>
    <id>http://xiaomozhang.github.io/2021/10/12/golang-netpoll-realization-analysis/</id>
    <published>2021-10-12T03:35:03.000Z</published>
    <updated>2021-10-13T02:15:26.864Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;1-io模型&quot;&gt;&lt;a href=&quot;#1-io模型&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="Golang netpoll" scheme="http://xiaomozhang.github.io/categories/Golang-netpoll/"/>
    
    
    <category term="Golang netpoll" scheme="http://xiaomozhang.github.io/tags/Golang-netpoll/"/>
    
  </entry>
  
  <entry>
    <title>io模型的演进</title>
    <link href="http://xiaomozhang.github.io/2021/10/12/service-io-model-evolution/"/>
    <id>http://xiaomozhang.github.io/2021/10/12/service-io-model-evolution/</id>
    <published>2021-10-12T02:34:08.000Z</published>
    <updated>2021-10-12T08:20:46.909Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;学习三大要素 what、why、how，每天给自己强调一遍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-什么是IO&quot;&gt;&lt;a href=&quot;#1-什么是IO&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="io memory module" scheme="http://xiaomozhang.github.io/categories/io-memory-module/"/>
    
    
    <category term="io memory module" scheme="http://xiaomozhang.github.io/tags/io-memory-module/"/>
    
  </entry>
  
  <entry>
    <title>Go服务跨平台交叉编译打包与设置版本号</title>
    <link href="http://xiaomozhang.github.io/2021/10/11/golang-goarch-goos-mutiple-platform-build/"/>
    <id>http://xiaomozhang.github.io/2021/10/11/golang-goarch-goos-mutiple-platform-build/</id>
    <published>2021-10-11T02:35:03.000Z</published>
    <updated>2021-10-11T02:52:05.138Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt; </summary>
        
      
    
    
    
    <category term="golang跨平台交叉编译" scheme="http://xiaomozhang.github.io/categories/golang%E8%B7%A8%E5%B9%B3%E5%8F%B0%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/"/>
    
    
    <category term="Goarch、Goos、Cgo" scheme="http://xiaomozhang.github.io/tags/Goarch%E3%80%81Goos%E3%80%81Cgo/"/>
    
  </entry>
  
  <entry>
    <title>java8新特性原理以及实战应用-lambda函数式编程与日期篇</title>
    <link href="http://xiaomozhang.github.io/2021/10/10/java8-lambda-with-date-process/"/>
    <id>http://xiaomozhang.github.io/2021/10/10/java8-lambda-with-date-process/</id>
    <published>2021-10-10T01:14:49.000Z</published>
    <updated>2021-10-09T13:48:30.144Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-简介&quot;&gt;&lt;a href=&quot;#1-简介&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="Jdk8 lambda表达式" scheme="http://xiaomozhang.github.io/categories/Jdk8-lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    
    <category term="Java8 lambda" scheme="http://xiaomozhang.github.io/tags/Java8-lambda/"/>
    
    <category term="Stream Programming" scheme="http://xiaomozhang.github.io/tags/Stream-Programming/"/>
    
    <category term="LocalDate、LocalTime、Instant、Duration" scheme="http://xiaomozhang.github.io/tags/LocalDate%E3%80%81LocalTime%E3%80%81Instant%E3%80%81Duration/"/>
    
  </entry>
  
  <entry>
    <title>零基础深入学习携程Apollo配置中心</title>
    <link href="http://xiaomozhang.github.io/2021/10/09/apollo-config-trip/"/>
    <id>http://xiaomozhang.github.io/2021/10/09/apollo-config-trip/</id>
    <published>2021-10-09T03:32:21.000Z</published>
    <updated>2021-10-12T06:54:56.575Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-Apollo配置中心简介&quot;&gt;&lt;a href=&quot;#1-Apollo配置中心简介&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="Java Apollo config" scheme="http://xiaomozhang.github.io/categories/Java-Apollo-config/"/>
    
    
    <category term="distributed config" scheme="http://xiaomozhang.github.io/tags/distributed-config/"/>
    
  </entry>
  
  <entry>
    <title>golang日志篇-log与fmt区别</title>
    <link href="http://xiaomozhang.github.io/2021/10/08/golang-log-with-fmt-different/"/>
    <id>http://xiaomozhang.github.io/2021/10/08/golang-log-with-fmt-different/</id>
    <published>2021-10-08T02:35:03.000Z</published>
    <updated>2021-10-11T06:32:17.005Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近在排查golang服务上报丢失日志的问题。发现服务中记录日志的操作大部分使用都是golang log包下的工具类进行操作的,那么log与fmt二者有什么区别？通过下面的样例来具体了解下二者的区别。&lt;/p&gt;
&lt;h2 id=&quot;1-线程安全层面&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Golang日志输出" scheme="http://xiaomozhang.github.io/categories/Golang%E6%97%A5%E5%BF%97%E8%BE%93%E5%87%BA/"/>
    
    
    <category term="Golang log Golang fmt" scheme="http://xiaomozhang.github.io/tags/Golang-log-Golang-fmt/"/>
    
  </entry>
  
  <entry>
    <title>深入理解Golang UDP编程</title>
    <link href="http://xiaomozhang.github.io/2021/10/07/golang-udp-protocol-study/"/>
    <id>http://xiaomozhang.github.io/2021/10/07/golang-udp-protocol-study/</id>
    <published>2021-10-07T02:34:08.000Z</published>
    <updated>2021-10-11T08:52:00.356Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本周在排查golang守护进程服务通过udp server服务接收教师端服务日志时,需要学生端本机发送udp数据信息样例测试我们守护进程消费日志信息相关的问题。故对我们Go</summary>
        
      
    
    
    
    <category term="Golang Udp" scheme="http://xiaomozhang.github.io/categories/Golang-Udp/"/>
    
    
    <category term="Golang Udp" scheme="http://xiaomozhang.github.io/tags/Golang-Udp/"/>
    
  </entry>
  
  <entry>
    <title>自定义nacos ribbon负载均衡</title>
    <link href="http://xiaomozhang.github.io/2021/06/04/nacos-ribbon-custom-loadbalancer-rule/"/>
    <id>http://xiaomozhang.github.io/2021/06/04/nacos-ribbon-custom-loadbalancer-rule/</id>
    <published>2021-06-04T11:37:49.000Z</published>
    <updated>2021-06-12T03:50:46.502Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;一、ribbon入门&quot;&gt;&lt;a href=&quot;#一、ribbon入门&quot; class=&quot;headerlink&quot; title=&quot;一、ribbon入门&quot;&gt;&lt;/a&gt;一、ribbon入门&lt;/h2&gt;&lt;h3 id=&quot;1、ribbon在微服务中是什么-起到了什么作用&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="SpringBoot Nacos" scheme="http://xiaomozhang.github.io/categories/SpringBoot-Nacos/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaomozhang.github.io/tags/SpringBoot/"/>
    
    <category term="nacos" scheme="http://xiaomozhang.github.io/tags/nacos/"/>
    
    <category term="custom nacos ribbon rule" scheme="http://xiaomozhang.github.io/tags/custom-nacos-ribbon-rule/"/>
    
  </entry>
  
  <entry>
    <title>redisTemplate常规Jackson2Json Serializer介绍及使用区别</title>
    <link href="http://xiaomozhang.github.io/2021/02/07/spring-boot-redis-serializer-problems/"/>
    <id>http://xiaomozhang.github.io/2021/02/07/spring-boot-redis-serializer-problems/</id>
    <published>2021-02-07T14:18:57.000Z</published>
    <updated>2021-02-07T15:02:58.443Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;一、使用Jackson2JsonRedisSerializer序列化反序列化带泛型的List数据&quot;&gt;&lt;a href=&quot;#一、使用Jackson2JsonRedisSerializer序列化反序列化带泛型的List数据&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="SpringBoot" scheme="http://xiaomozhang.github.io/categories/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="http://xiaomozhang.github.io/tags/SpringBoot/"/>
    
    <category term="RedisTemplate Serializer" scheme="http://xiaomozhang.github.io/tags/RedisTemplate-Serializer/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Matery 常见问题及解决</title>
    <link href="http://xiaomozhang.github.io/2021/02/07/hexo-matery-problems/"/>
    <id>http://xiaomozhang.github.io/2021/02/07/hexo-matery-problems/</id>
    <published>2021-02-07T08:54:57.000Z</published>
    <updated>2021-02-07T14:03:36.368Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文章非 Hexo + Matery Theme 教程，详细教程见&lt;a</summary>
        
      
    
    
    
    <category term="Hexo" scheme="http://xiaomozhang.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://xiaomozhang.github.io/tags/Hexo/"/>
    
    <category term="Matery" scheme="http://xiaomozhang.github.io/tags/Matery/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot2.X使用Lettuce设置多个RedisTemplate实例</title>
    <link href="http://xiaomozhang.github.io/2021/02/07/spring-boot-lettuce-multi-instance/"/>
    <id>http://xiaomozhang.github.io/2021/02/07/spring-boot-lettuce-multi-instance/</id>
    <published>2021-02-07T05:04:42.000Z</published>
    <updated>2021-02-07T08:09:39.632Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近公司产品需求,需要使用同一个redis数据库服务使用不同的序列化方式的redisTemplate对缓存数据库进行读写操作,&lt;br&gt;目前大部分网上的文章在实作Redis分流时，都是以Jedis为样例，但SpringBoot在2.x版本之后已经将Redis库替换成Lettu</summary>
        
      
    
    
    
    <category term="Spring Boot" scheme="http://xiaomozhang.github.io/categories/Spring-Boot/"/>
    
    
    <category term="Redis" scheme="http://xiaomozhang.github.io/tags/Redis/"/>
    
    <category term="SpringBoot" scheme="http://xiaomozhang.github.io/tags/SpringBoot/"/>
    
    <category term="Lettuce" scheme="http://xiaomozhang.github.io/tags/Lettuce/"/>
    
    <category term="multiple RedisTemplate" scheme="http://xiaomozhang.github.io/tags/multiple-RedisTemplate/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 2.x使用mybatis</title>
    <link href="http://xiaomozhang.github.io/2021/02/01/spring-boot-mybatis/"/>
    <id>http://xiaomozhang.github.io/2021/02/01/spring-boot-mybatis/</id>
    <published>2021-02-01T13:35:34.983Z</published>
    <updated>2021-02-01T13:35:34.983Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;orm框架的本质是简化编程中操作数据库的编码，发展到现在基本上就剩两家了，一个是宣称可以不用写一句SQL的hibernate，一个是可以灵活调试动态sql的mybatis,两者各有特点，在企业级系统开发中可以根据需求灵活使用。&lt;/p&gt;
&lt;h1 id=&quot;使用注解版&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Spring Boot" scheme="http://xiaomozhang.github.io/categories/Spring-Boot/"/>
    
    
    <category term="Spring Boot" scheme="http://xiaomozhang.github.io/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>logstash日期插件支持纳秒</title>
    <link href="http://xiaomozhang.github.io/2020/12/18/logstash-filter-date-compile/"/>
    <id>http://xiaomozhang.github.io/2020/12/18/logstash-filter-date-compile/</id>
    <published>2020-12-18T08:01:58.000Z</published>
    <updated>2021-02-01T13:35:34.981Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近项目上遇到时间为纳秒的情况，用到logstash解析时是不支持纳秒的，这里提供一个思路就是自己修改logstash的日期插件，让他支持纳秒，具体涉及的插件是&lt;a</summary>
        
      
    
    
    
    
    <category term="logstash" scheme="http://xiaomozhang.github.io/tags/logstash/"/>
    
  </entry>
  
</feed>
